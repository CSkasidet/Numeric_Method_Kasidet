[{"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\index.js":"1","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\App.js":"2","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Root of Equation\\Bisection.js":"3","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Root of Equation\\Graphical.js":"4","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Root of Equation\\Newton-raphson.js":"5","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Root of Equation\\False_position.js":"6","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Root of Equation\\Onepoint.js":"7","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Jordan.js":"8","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Root of Equation\\Secant.js":"9","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Cramer.js":"10","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Gauss.js":"11","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\LU.js":"12","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Cholesky.js":"13","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Seidel.js":"14","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Gradient.js":"15","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Jacobi.js":"16","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Interpolation\\Newton.js":"17","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Regression\\Polynomial.js":"18","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Regression\\Linear.js":"19","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Integration\\CompositeSimpson.js":"20","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Interpolation\\Lagrange.js":"21","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Integration\\CompositeTrapzoidal.js":"22","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Regression\\MultipleLinear.js":"23","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Inverse.js":"24","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Differentiation\\Forwardh.js":"25","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Differentiation\\Backwardh.js":"26","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Differentiation\\Centralh.js":"27","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Differentiation\\ForwardH2.js":"28","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Differentiation\\Centralh2.js":"29","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Differentiation\\Backwardh2.js":"30","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\ODE\\Heun.js":"31","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\ODE\\Euler.js":"32","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Interpolation\\Spline.js":"33","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\ODE\\Modified_Euler.js":"34","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\services\\Services.js":"35","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\components\\Graph.js":"36"},{"size":497,"mtime":1651124316743,"results":"37","hashOfConfig":"38"},{"size":11135,"mtime":1651131197517,"results":"39","hashOfConfig":"38"},{"size":6348,"mtime":1651124316739,"results":"40","hashOfConfig":"38"},{"size":4099,"mtime":1651124316741,"results":"41","hashOfConfig":"38"},{"size":4158,"mtime":1651124316741,"results":"42","hashOfConfig":"38"},{"size":5389,"mtime":1651124316740,"results":"43","hashOfConfig":"38"},{"size":4091,"mtime":1651124316741,"results":"44","hashOfConfig":"38"},{"size":6900,"mtime":1651124316733,"results":"45","hashOfConfig":"38"},{"size":4464,"mtime":1651124316742,"results":"46","hashOfConfig":"38"},{"size":6108,"mtime":1651124316730,"results":"47","hashOfConfig":"38"},{"size":6670,"mtime":1651124316730,"results":"48","hashOfConfig":"38"},{"size":5644,"mtime":1651124316734,"results":"49","hashOfConfig":"38"},{"size":7694,"mtime":1651124316729,"results":"50","hashOfConfig":"38"},{"size":8628,"mtime":1651124316734,"results":"51","hashOfConfig":"38"},{"size":9634,"mtime":1651124316731,"results":"52","hashOfConfig":"38"},{"size":8507,"mtime":1651124316732,"results":"53","hashOfConfig":"38"},{"size":7978,"mtime":1651124316728,"results":"54","hashOfConfig":"38"},{"size":7880,"mtime":1651124316739,"results":"55","hashOfConfig":"38"},{"size":6910,"mtime":1651124316737,"results":"56","hashOfConfig":"38"},{"size":3839,"mtime":1651124316724,"results":"57","hashOfConfig":"38"},{"size":7506,"mtime":1651124316726,"results":"58","hashOfConfig":"38"},{"size":3687,"mtime":1651124316725,"results":"59","hashOfConfig":"38"},{"size":8071,"mtime":1651124316738,"results":"60","hashOfConfig":"38"},{"size":6313,"mtime":1651124316732,"results":"61","hashOfConfig":"38"},{"size":4140,"mtime":1651124316722,"results":"62","hashOfConfig":"38"},{"size":4118,"mtime":1651124316719,"results":"63","hashOfConfig":"38"},{"size":4175,"mtime":1651124316720,"results":"64","hashOfConfig":"38"},{"size":4348,"mtime":1651124316721,"results":"65","hashOfConfig":"38"},{"size":4468,"mtime":1651124316721,"results":"66","hashOfConfig":"38"},{"size":4350,"mtime":1651124316719,"results":"67","hashOfConfig":"38"},{"size":4592,"mtime":1651124316736,"results":"68","hashOfConfig":"38"},{"size":4565,"mtime":1651124316735,"results":"69","hashOfConfig":"38"},{"size":8218,"mtime":1651124316728,"results":"70","hashOfConfig":"38"},{"size":4920,"mtime":1651124316736,"results":"71","hashOfConfig":"38"},{"size":1215,"mtime":1651124316746,"results":"72","hashOfConfig":"38"},{"size":762,"mtime":1651124316742,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"jxh2bl",{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\index.js",[],["149","150"],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\App.js",["151"],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Root of Equation\\Bisection.js",["152"],"import React, { Component } from 'react'\r\nimport { Card, Input, Button, Table } from 'antd';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport { error, func, getXL_XR_from_API } from '../../services/Services';\r\nimport Graph from '../../components/Graph';\r\n\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\nvar dataInTable = []\r\nconst columns = [\r\n    {\r\n        title: \"Iteration\",\r\n        dataIndex: \"iteration\",\r\n        key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"XL\",\r\n        dataIndex: \"xl\",\r\n        key: \"xl\"\r\n    },\r\n    {\r\n        title: \"XR\",\r\n        dataIndex: \"xr\",\r\n        key: \"xr\"\r\n    },\r\n    {\r\n        title: \"X\",\r\n        dataIndex: \"x\",\r\n        key: \"x\"\r\n    },\r\n    {\r\n        title: \"Error\",\r\n        key: \"error\",\r\n        dataIndex: \"error\"\r\n    }\r\n];\r\n\r\nclass Bisection extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = this.getInitialState();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.bisection = this.bisection.bind(this);\r\n        this.handleAPI = this.handleAPI.bind(this);\r\n    }\r\n\r\n    getInitialState = () => ({\r\n        fx: \"\",\r\n        xl: 0,\r\n        xr: 0,\r\n        showOutputCard: false,\r\n        showGraph: false,\r\n        moveLeft: false\r\n        \r\n    })\r\n\r\n    bisection(xl, xr) {\r\n        var increaseFunction = false;\r\n        var xm = 0;\r\n        var sum = parseFloat(0.000000);\r\n        var n = 0;\r\n        var data = []\r\n        data['xl'] = []\r\n        data['xr'] = []\r\n        data['x'] = []\r\n        data['error'] = []\r\n        if (func(this.state.fx, xl) < func(this.state.fx, xr)) {\r\n            increaseFunction = true;\r\n        }\r\n\r\n        do {\r\n            xm = (xl + xr) / 2;\r\n            if (func(this.state.fx, xm) * func(this.state.fx, xr) < 0) {\r\n                sum = error(xm, xr);\r\n                if (increaseFunction) {\r\n                    xl = xm;\r\n                }\r\n                else {\r\n                    xr = xm;\r\n                }\r\n\r\n            }\r\n            else {\r\n                sum = error(xm, xl);\r\n                if (increaseFunction) {\r\n                    xr = xm;\r\n                }\r\n                else {\r\n                    xl = xm;\r\n                }\r\n            }\r\n            data['xl'][n] = xl;\r\n            data['xr'][n] = xr;\r\n            data['x'][n] = xm.toFixed(8);\r\n            data['error'][n] = Math.abs(sum).toFixed(8);\r\n            n++;\r\n        } while (Math.abs(sum) > 0.000001);\r\n        this.createTable(data['xl'], data['xr'], data['x'], data['error']);\r\n        this.setState({\r\n            showOutputCard: true,\r\n            showGraph: true,\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    async handleAPI() {\r\n    \r\n        const response = await getXL_XR_from_API();\r\n        this.setState({\r\n            fx: response[0].fx,\r\n            xl: response[0].xl,\r\n            xr: response[0].xr\r\n        })\r\n        const { fx, xl, xr } = this.state;\r\n\r\n        this.bisection(parseFloat(xl), parseFloat(xr));\r\n\r\n    }\r\n\r\n    createTable(xl, xr, x, error) {\r\n        dataInTable = []\r\n        for (var i = 0; i < xl.length; i++) {\r\n            dataInTable.push({\r\n                iteration: i + 1,\r\n                xl: xl[i],\r\n                xr: xr[i],\r\n                x: x[i],\r\n                error: error[i]\r\n            });\r\n        }\r\n\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n    }\r\n    render() {\r\n        let { fx, xl, xr } = this.state;\r\n        return (\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Bisection</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                            id=\"inputCard\"\r\n                        >\r\n                            <h2 style={{color:\"white\"}}>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\r\n                            <h2 style={{color:\"white\"}}>X<sub>L</sub></h2><Input size=\"large\" name=\"xl\" style={InputStyle}></Input>\r\n                            <h2 style={{color:\"white\"}}>X<sub>R</sub></h2><Input size=\"large\" name=\"xr\" style={InputStyle}></Input><br /><br />\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <Button id=\"submit_button\" onClick={\r\n                                    () => this.bisection(parseFloat(xl), parseFloat(xr))\r\n                                }\r\n                                    style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <Button id=\"submit_button_api\" onClick={() => this.handleAPI()}\r\n                                    style={{ background: \"blue\", color: \"white\" }}>Calculate from data that get from API</Button>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showGraph && <Graph fx={fx} title=\"Bisection Method\" />}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.showOutputCard &&\r\n                        <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\r\n                            id=\"outputCard\"\r\n                        >\r\n                            <Table pagination={{defaultPageSize: 5}} columns={columns} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}></Table>\r\n                        </Card>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Bisection;","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Root of Equation\\Graphical.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Root of Equation\\Newton-raphson.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Root of Equation\\False_position.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Root of Equation\\Onepoint.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Jordan.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Root of Equation\\Secant.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Cramer.js",["153"],"import React, { Component } from 'react'\r\nimport { Card, Input, Button } from 'antd';\r\nimport { det } from 'mathjs';\r\nimport '../../screen.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\n\r\nvar A = [], B = [], answer = [], matrixA = [], matrixB = []\r\nclass Cramer extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: parseInt(0),\r\n            column: parseInt(0),\r\n            showDimentionForm: true,\r\n            showMatrixForm: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.cramer = this.cramer.bind(this);\r\n\r\n    }\r\n\r\n    cramer() {\r\n        this.initMatrix();\r\n        var counter = 0;\r\n        \r\n\r\n        while (counter != this.state.row) {\r\n            var transformMatrix = JSON.parse(JSON.stringify(A)); //Deep copy\r\n            for (var i = 0; i < this.state.row; i++) {\r\n                for (var j = 0; j < this.state.column; j++) {\r\n                    if (j === counter) {\r\n                        transformMatrix[i][j] = B[i]\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n            counter++;\r\n            answer.push(<h2>X<sub>{counter}</sub>=&nbsp;&nbsp;{Math.round(det(transformMatrix)) / Math.round(det(A))}</h2>)\r\n            answer.push(<br />)\r\n\r\n        }\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n    }\r\n\r\n    createMatrix(row, column) {\r\n        for (var i = 1; i <= row; i++) {\r\n            for (var j = 1; j <= column; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"14%\",\r\n                    height: \"50%\",\r\n                    backgroundColor: \"#06d9a0\",\r\n                    marginInlineEnd: \"5%\",\r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }}\r\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\r\n            }\r\n            matrixA.push(<br />)\r\n            matrixB.push(<Input style={{\r\n                width: \"14%\",\r\n                height: \"50%\",\r\n                backgroundColor: \"black\",\r\n                marginInlineEnd: \"5%\",\r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }}\r\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showMatrixForm: true,\r\n        })\r\n\r\n\r\n    }\r\n\r\n    initMatrix() {\r\n        for (var i = 0; i < this.state.row; i++) {\r\n            A[i] = []\r\n            for (var j = 0; j < this.state.column; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { row, column } = this.state;\r\n        return (\r\n            <div style={{ padding: \"30px\" }}>\r\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Cramer's Rule</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Card\r\n                            bordered={true}\r\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\r\n                            onChange={this.handleChange}\r\n                        >\r\n\r\n                            {this.state.showDimentionForm &&\r\n                                <div>\r\n                                    <h4>Row</h4><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                    <h4>Column</h4><Input size=\"large\" name=\"column\" style={InputStyle}></Input><br />\r\n                                    <Button id=\"dimention_button\" onClick={\r\n                                        () => this.createMatrix(row, column)\r\n                                    }\r\n                                        style={{ background: \"#4caf50\", color: \"white\" }}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </div>\r\n                            }\r\n                            {this.state.showMatrixForm &&\r\n                                <div>\r\n                                    <h2>Matrix [A]</h2><br />{matrixA}\r\n                                    <h2>Vector [B]<br /></h2>{matrixB}<br/>\r\n                                    <Button\r\n                                        size=\"large\"\r\n                                        id=\"matrix_button\"\r\n                                        style={{ background: \"blue\", color: \"white\" }}\r\n                                        onClick={() => this.cramer()}>\r\n                                        Submit\r\n                                </Button>\r\n                                </div>\r\n                            }\r\n\r\n\r\n\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {this.state.showOutputCard &&\r\n                            <Card\r\n                                title={\"Output\"}\r\n                                bordered={true}\r\n                                style={{ width: \"100%\", background: \"#3d683d\", color: \"#FFFFFFFF\", float: \"left\" }}\r\n                                onChange={this.handleChange}>\r\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{answer}</p>\r\n                            </Card>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Cramer;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Gauss.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\LU.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Cholesky.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Seidel.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Gradient.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Jacobi.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Interpolation\\Newton.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Regression\\Polynomial.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Regression\\Linear.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Integration\\CompositeSimpson.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Interpolation\\Lagrange.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Integration\\CompositeTrapzoidal.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Regression\\MultipleLinear.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Linear Algebra\\Inverse.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Differentiation\\Forwardh.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Differentiation\\Backwardh.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Differentiation\\Centralh.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Differentiation\\ForwardH2.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Differentiation\\Centralh2.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Differentiation\\Backwardh2.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\ODE\\Heun.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\ODE\\Euler.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\Interpolation\\Spline.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\Calculate\\ODE\\Modified_Euler.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\services\\Services.js",[],"C:\\Users\\Lenovo\\Documents\\GitHub\\NUMERICAL_METHODE_CSB\\src\\components\\Graph.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":6,"column":21,"nodeType":"160","messageId":"161","endLine":6,"endColumn":37},{"ruleId":"158","severity":1,"message":"162","line":123,"column":17,"nodeType":"160","messageId":"161","endLine":123,"endColumn":19},{"ruleId":"163","severity":1,"message":"164","line":38,"column":24,"nodeType":"165","messageId":"166","endLine":38,"endColumn":26},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'PieChartOutlined' is defined but never used.","Identifier","unusedVar","'fx' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]